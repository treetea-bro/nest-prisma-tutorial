model User {
  id               String             @id @default(uuid()) @db.VarChar(36)
  loginId          String             @unique @db.VarChar(30)
  username         String             @db.VarChar(30)
  displayName      String?            @default("") @db.VarChar(15)
  userSetting      UserSetting?
  posts            Post[]
  UserOnGroupPosts UserOnGroupPosts[]
}

model GroupPost {
  id               Int                @id @default(autoincrement())
  title            String
  description      String
  UserOnGroupPosts UserOnGroupPosts[]
}

model UserOnGroupPosts {
  user        User      @relation(fields: [loginId], references: [loginId])
  loginId     String
  groupPost   GroupPost @relation(fields: [groupPostId], references: [id])
  groupPostId Int

  @@id([loginId, groupPostId])
}

model UserSetting {
  id              String  @id @default(uuid()) @db.VarChar(36)
  notificationsOn Boolean
  smsEnabled      Boolean
  loginId         String  @unique @db.VarChar(30)
  user            User    @relation(fields: [loginId], references: [loginId], onDelete: Cascade)
}

model Post {
  id          Int    @id @default(autoincrement())
  title       String @db.VarChar(100)
  description String @db.VarChar(1000)
  user        User   @relation(fields: [loginId], references: [loginId])
  loginId     String @db.VarChar(30)
}
